version: '3.8'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper


  police-service:
    build: ../police-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    image: police-service-image
    ports:
      - "8089:8089"
    networks:
      - kafka-net
    depends_on:
      - kafka
      - mysql

  alert-service:
    build: ../alert-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    image: alert-service-image
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - kafka
      - mysql

  news-service:
    build: ../news-service
    image: news-service-image
    ports:
      - "8087:8087"
    networks:
      - kafka-net

  mysql:
    build:
      context: ../alert-service
      dockerfile: mysql_dockerfile
    image: mysql-image
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: AlertService
      MYSQL_USER: root
      MYSQL_PASSWORD: pass
    networks:
      - kafka-net
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./init/createAlerts.sql:/docker-entrypoint-initdb.d/createAlerts.sql  # Adjusted volume mapping
    command: "--init-file /docker-entrypoint-initdb.d/createAlerts.sql"  # Adjusted command
    depends_on:
      - kafka

